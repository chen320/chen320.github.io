<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo-Fluid博客主题美化</title>
    <link href="/2022/07/14/Hexo-Fluid%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
    <url>/2022/07/14/Hexo-Fluid%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>&ensp;&ensp;当安装搭配好Hexo博客后可以根据自己的爱好选择不同的主题对自己的博客进行装修，当然有很多主题供大家使用，在此我给大家推荐的是fluid主题，它是一款 Meterial Design风格的Hexo主题，以简约的设计帮助我们专注于写作。</p><p>fluid主题相较于其它主题的优势：<br>&ensp;&ensp;1.设计遵循简洁至上，同时具有轻快的体验，和优雅的颜值；<br>&ensp;&ensp;2.提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式；<br>&ensp;&ensp;3.响应式页面，适配手机、平板等设备；</p><p>&ensp;&ensp;此文章只介绍fluid主题风格的优化，不涉及fluid的安装及配置，如果你想要安装配置fluid主题，可以<a href="https://fluid-dev.github.io/hexo-fluid-docs/start/">参考此链接</a>进行操作即可，接下来将会给大家介绍两种将优化效果引入主题的方法，大家自行选择喜欢的去使用即可。</p><h3 id="一、使用css-js引入的方法"><a href="#一、使用css-js引入的方法" class="headerlink" title="一、使用css/js引入的方法"></a>一、使用css/js引入的方法</h3><h3 id="1-新建css或者js文件"><a href="#1-新建css或者js文件" class="headerlink" title="1.新建css或者js文件"></a>1.新建css或者js文件</h3><h6 id="在此以js为例，在下载的主题文件夹下找到source-js-，在此文件夹下新建一个txt文件，把喜欢的优化风格代码粘贴进去，然后把文档扩展名修改成-js即可。配置好代码文件后打开主题配置文件-config-yml找到”custom-js”和”custom-css”下面进行引入。在此不细说，在2中会将说明如何新建的js文件引入主题。"><a href="#在此以js为例，在下载的主题文件夹下找到source-js-，在此文件夹下新建一个txt文件，把喜欢的优化风格代码粘贴进去，然后把文档扩展名修改成-js即可。配置好代码文件后打开主题配置文件-config-yml找到”custom-js”和”custom-css”下面进行引入。在此不细说，在2中会将说明如何新建的js文件引入主题。" class="headerlink" title="在此以js为例，在下载的主题文件夹下找到source/js/，在此文件夹下新建一个txt文件，把喜欢的优化风格代码粘贴进去，然后把文档扩展名修改成.js即可。配置好代码文件后打开主题配置文件_config.yml找到”custom_js”和”custom_css”下面进行引入。在此不细说，在2中会将说明如何新建的js文件引入主题。"></a>在此以js为例，在下载的主题文件夹下找到source/js/，在此文件夹下新建一个txt文件，把喜欢的优化风格代码粘贴进去，然后把文档扩展名修改成.js即可。配置好代码文件后打开主题配置文件_config.yml找到”custom_js”和”custom_css”下面进行引入。在此不细说，在2中会将说明如何新建的js文件引入主题。</h6><h3 id="2-把新建的js文件引入主题"><a href="#2-把新建的js文件引入主题" class="headerlink" title="2.把新建的js文件引入主题"></a>2.把新建的js文件引入主题</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">custom_js:<br>  - <span class="hljs-regexp">/js/</span>diy/timeDate.js<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.js  <span class="hljs-comment">#/APlayer#/APlayer依赖</span><br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/m</span>etowolf<span class="hljs-regexp">/Metingjs@1.2/</span>dist<span class="hljs-regexp">/Meting.min.js  #/</span>APlayer依赖<br>  <span class="hljs-comment">#指定好.js的路径和安装依赖包</span><br>  <span class="hljs-comment">#引入css文件一样，除后缀和文件位置不同之外，其他操作一样</span><br></code></pre></td></tr></table></figure><h3 id="二、在主题源文件中引入美化特效"><a href="#二、在主题源文件中引入美化特效" class="headerlink" title="二、在主题源文件中引入美化特效"></a>二、在主题源文件中引入美化特效</h3><p>例如：在页脚插入运行时间<br><img src="https://img-blog.csdnimg.cn/img_convert/85798ebe77d01f79d839599456ad0786.png" alt=""><br>但是这样会大动代码量，每当主题修改或者升级后都得对代码修改一遍，太过繁琐，所以我推荐大家使用第一种方式进行美化操作。</p><h3 id="三、美化特效"><a href="#三、美化特效" class="headerlink" title="三、美化特效"></a>三、美化特效</h3><h3 id="JS类特效"><a href="#JS类特效" class="headerlink" title="JS类特效"></a>JS类特效</h3><h4 id="1-上升的气泡"><a href="#1-上升的气泡" class="headerlink" title="1.上升的气泡"></a>1.上升的气泡</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/3555765bffead797731dc552ef79fa83.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>qipao.js <span class="hljs-comment">#上升气泡</span><br></code></pre></td></tr></table></figure></p><h4 id="2-静态彩带-点击改变形状"><a href="#2-静态彩带-点击改变形状" class="headerlink" title="2.静态彩带+点击改变形状"></a>2.静态彩带+点击改变形状</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/f1689dd93e5b81645ef6d37cb6d6e644.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>jingtaisidai.js <span class="hljs-comment"># 静态彩带</span><br></code></pre></td></tr></table></figure></p><h4 id="3-动态黑色线条"><a href="#3-动态黑色线条" class="headerlink" title="3.动态黑色线条"></a>3.动态黑色线条</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/d08bc48555cf2b468a2fa56bd854cf77.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>xiantiao.js <span class="hljs-comment"># 动态黑色线条</span><br></code></pre></td></tr></table></figure></p><h4 id="4-小雪花飘落"><a href="#4-小雪花飘落" class="headerlink" title="4.小雪花飘落"></a>4.小雪花飘落</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/0494c6fdd9fd107dab05b27c263da668.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>xiaoxuehua.js <span class="hljs-comment"># 小雪花飘落</span><br></code></pre></td></tr></table></figure></p><h4 id="5-樱花飘落"><a href="#5-樱花飘落" class="headerlink" title="5.樱花飘落"></a>5.樱花飘落</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/29a4401d0545e738c220d8a8507c4565.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/yi</span>nghua.js <span class="hljs-comment"># 樱花飘落</span><br></code></pre></td></tr></table></figure></p><h4 id="6-鼠标后跟随彩色星星"><a href="#6-鼠标后跟随彩色星星" class="headerlink" title="6.鼠标后跟随彩色星星"></a>6.鼠标后跟随彩色星星</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/081f5d0068dc3af0dc924ff3690c50ee.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>xiaoxingxing.js <span class="hljs-comment"># 鼠标跟随小星星</span><br></code></pre></td></tr></table></figure></p><h4 id="7-大雪花飘落"><a href="#7-大雪花飘落" class="headerlink" title="7.大雪花飘落"></a>7.大雪花飘落</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/c829a13989153cd8263ab0da523b8784.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>daxuehua.js <span class="hljs-comment"># 大雪花飘落</span><br></code></pre></td></tr></table></figure></p><h4 id="8-鼠标点击出小爱心"><a href="#8-鼠标点击出小爱心" class="headerlink" title="8.鼠标点击出小爱心"></a>8.鼠标点击出小爱心</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/f82d09498b2d766ea9917559346fd268.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>love.js <span class="hljs-comment"># 鼠标点击出小爱心❤</span><br></code></pre></td></tr></table></figure></p><h4 id="9-鼠标点击出爆炸效果"><a href="#9-鼠标点击出爆炸效果" class="headerlink" title="9.鼠标点击出爆炸效果"></a>9.鼠标点击出爆炸效果</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/2995d164006f2cd384ac81cc54ec8b6b.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>boom.js <span class="hljs-comment"># 鼠标点击爆炸效果</span><br><span class="hljs-regexp">//</span>cdn.bootcss.com<span class="hljs-regexp">/animejs/</span><span class="hljs-number">2.2</span>.<span class="hljs-number">0</span>/anime.min.js <span class="hljs-comment">#依赖</span><br></code></pre></td></tr></table></figure></p><h3 id="CSS类特效"><a href="#CSS类特效" class="headerlink" title="CSS类特效"></a>CSS类特效</h3><h4 id="1-头部打字机颜色效果渐变"><a href="#1-头部打字机颜色效果渐变" class="headerlink" title="1.头部打字机颜色效果渐变"></a>1.头部打字机颜色效果渐变</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/1357f1d03d5223a9401d4db121f7791c.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/</span>toubudaziji.css <span class="hljs-comment"># 头部打字机颜色效果渐变</span><br></code></pre></td></tr></table></figure></p><h4 id="2-头部打字机颜色"><a href="#2-头部打字机颜色" class="headerlink" title="2.头部打字机颜色"></a>2.头部打字机颜色</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/1357f1d03d5223a9401d4db121f7791c.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/</span>daziyanse.css<span class="hljs-comment"># 头部打字机颜色</span><br></code></pre></td></tr></table></figure></p><h4 id="3-滚动条颜色"><a href="#3-滚动条颜色" class="headerlink" title="3.滚动条颜色"></a>3.滚动条颜色</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/f3bcb50723070099eacb781faf6aef3a.png" alt=""><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/gu</span>ndongtiao.css<span class="hljs-comment"># 滚动条颜色</span><br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>Hexo文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github的修改和上传</title>
    <link href="/2021/12/07/Github%E7%9A%84%E4%BF%AE%E6%94%B9%E5%92%8C%E4%B8%8A%E4%BC%A0/"/>
    <url>/2021/12/07/Github%E7%9A%84%E4%BF%AE%E6%94%B9%E5%92%8C%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="【vscode】-【github】-【GithubDesktop】"><a href="#【vscode】-【github】-【GithubDesktop】" class="headerlink" title="【vscode】+【github】+【GithubDesktop】"></a>【vscode】+【github】+【GithubDesktop】</h1><ul><li>相关工具下载链接<br><a href="https://desktop.github.com/">Github Desktop</a><br><a href="https://code.visualstudio.com/">Vs Code</a><br><a href="https://github.com/chentao320/vscode-github-github-desktop">github界面</a></li><li>首先准备一个github账号</li><li>点开github主界面的右上角的 “+”后点击 New repository（新建一个仓库）</li><li>输入自己的仓库名字和描述，直接创建仓库即可</li><li>打开的GitHub Desktop,点击左上角file中的clone repository。<br><img src="https://note.youdao.com/yws/api/personal/file/WEBa0e93433bc7324eb7e9518cc91f2c55a?method=download&amp;shareKey=7d270568c24d7a2e2edb2fba4e11f5b8" alt=""></li><li>选择要编辑的仓库位置<br><img src="https://note.youdao.com/yws/api/personal/file/WEBbb72e523a3a2fae0f37ca601e91c2696?method=download&amp;shareKey=356ade6bcad7bb1310567731c63942f5" alt=""></li><li>第一次需要clone进去，从第二次开始直接open就行</li><li>clone之后，会出现如下界面，点击箭头所指的位置即可<br><img src="https://note.youdao.com/yws/api/personal/file/WEBe477ce88d6b9dd041fa39e21b3a34c0b?method=download&amp;shareKey=3d87bcd12bd18044947c57d8a19083c7" alt=""></li><li>点击之后就会跳转到Vs Code编辑器中</li><li>首先安装最基本的markdown语法编译<br><img src="https://note.youdao.com/yws/api/personal/file/WEBce0eafd62283107f6514d9c6e41c4e28?method=download&amp;shareKey=e869a27bcfea7ba84fc3e63a1f341409" alt=""></li><li>右击代码界面，会出现对应的运行结果界面，而且还是实时的<br><img src="https://note.youdao.com/yws/api/personal/file/WEB7e7c42c8f451bd385258ee890e391ab9?method=download&amp;shareKey=52edb6fab55cf1fbdefb1f32b9562842" alt=""></li><li>从上面那个图上可以看到左上角有个1，代表没有上传和保存</li><li>更改完之后直接保存，然后点开GitHub Desktop</li><li>可以看到有一些变绿的代码，代码更新改变的。</li><li>点击左下角的Commit to main，和github里面一样。<br><img src="https://note.youdao.com/yws/api/personal/file/WEBdcbb23e569b09b25d8903d3be5026e43?method=download&amp;shareKey=4073297cc090e1cd5cf49d9d82964728" alt=""></li><li>最终把更改后的推送到github仓库中即可<br><img src="https://note.youdao.com/yws/api/personal/file/WEB6ea033c92dedb434fe74c7a903488dd3?method=download&amp;shareKey=4469b857e55f4057b7007fa4739e170d" alt=""></li></ul><h3 id="最后补充一下，当我们要上传一个文件的时候，我们可能会遇到下面几个问题"><a href="#最后补充一下，当我们要上传一个文件的时候，我们可能会遇到下面几个问题" class="headerlink" title="最后补充一下，当我们要上传一个文件的时候，我们可能会遇到下面几个问题"></a>最后补充一下，当我们要上传一个文件的时候，我们可能会遇到下面几个问题</h3><ul><li>1、首先你需要把压缩包解压，这样不会在Vscode中左上角的资源管理器中看到你的文件信息，但是只读文件。</li><li>出现上述问题自主解决，因为解决方法很多。</li><li>2、在Github Desktop中你会看到如下界面，无法进行commit：<br><img src="https://note.youdao.com/yws/api/personal/file/WEB66c2683cd12d4187c3d2eed4d6c63486?method=download&amp;shareKey=5613d53765b9decc4072759b47e94edc" alt=""></li><li>此时你会发现左下角的Description没有写任何东西。</li><li>需要记住上传文件的时候Description部分必须写。随便写点就行。</li></ul>]]></content>
    
    
    <categories>
      
      <category>github的修改与上传</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github的修改与上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>控制台运行py文件问题</title>
    <link href="/2021/12/07/python%E6%96%87%E4%BB%B6%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E9%97%AE%E9%A2%98/"/>
    <url>/2021/12/07/python%E6%96%87%E4%BB%B6%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="cmd命令控制台输出py文件问题"><a href="#cmd命令控制台输出py文件问题" class="headerlink" title="cmd命令控制台输出py文件问题"></a>cmd命令控制台输出py文件问题</h1><h1 id="1、通过python命令运行py文件"><a href="#1、通过python命令运行py文件" class="headerlink" title="1、通过python命令运行py文件"></a>1、通过python命令运行py文件</h1><ul><li>问题：仅仅一个简单的print输出在控制台中没有输出结果，解决方法如下<h1 id="2、检查是否是使用的sublime编写的py文件"><a href="#2、检查是否是使用的sublime编写的py文件" class="headerlink" title="2、检查是否是使用的sublime编写的py文件"></a>2、检查是否是使用的sublime编写的py文件</h1></li><li>sublime编写的py文件运行需要配置python环境，所以检查是否只是在初学python时只是安装了anaconda，没有单独安装python<h1 id="3、检查python是否安装"><a href="#3、检查python是否安装" class="headerlink" title="3、检查python是否安装"></a>3、检查python是否安装</h1></li><li>在环境变量中输入python看是否有输出，无输出则代表python环境变量没有配好，需要把python安装路径加到Path中<h1 id="4、查看anaconda"><a href="#4、查看anaconda" class="headerlink" title="4、查看anaconda"></a>4、查看anaconda</h1></li><li>查看自己安装的anaconda中知否有内置的IPython环境，这样也可以正常运行</li></ul>]]></content>
    
    
    <categories>
      
      <category>python问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决hexo报错spwan failed</title>
    <link href="/2021/12/07/%E8%A7%A3%E5%86%B3hexo%E6%8A%A5%E9%94%99spwan%20failed/"/>
    <url>/2021/12/07/%E8%A7%A3%E5%86%B3hexo%E6%8A%A5%E9%94%99spwan%20failed/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="解决hexo报错spwan-failed"><a href="#解决hexo报错spwan-failed" class="headerlink" title="解决hexo报错spwan failed"></a>解决hexo报错spwan failed</h1><h4 id="报错1："><a href="#报错1：" class="headerlink" title="报错1："></a>报错1：</h4><p><img src="https://s2.loli.net/2022/03/15/sZkxnzA6Vv3jSce.png" alt="_66NF~4~____DWH4W__399W.png"></p><h4 id="解决方法如下："><a href="#解决方法如下：" class="headerlink" title="解决方法如下："></a>解决方法如下：</h4><ul><li>按照如下图操作：<br><img src="https://s2.loli.net/2022/03/15/5nF2LVqmNzctEoD.png" alt="O9C_TI_50U9ZE_N2V8PQ~@I.png"><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># 进入hexo根目录下</span><br>rm -rf <span class="hljs-string">.deploy_git/</span><br>git config <span class="hljs-params">--global</span> core.autocrlf <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure></li><li>最后重新生成提交<figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d<br></code></pre></td></tr></table></figure>在提交的时候有可能会出现下面的错误：<h4 id="报错2："><a href="#报错2：" class="headerlink" title="报错2："></a>报错2：</h4><img src="https://s2.loli.net/2022/03/15/FHb3nr2m7AtyJvs.png" alt="`_E7AGK7O7JYYJ__@_HUFQ1.png"><h4 id="解决方法如下：-1"><a href="#解决方法如下：-1" class="headerlink" title="解决方法如下："></a>解决方法如下：</h4></li><li>这是因为你的github设置出了问题</li><li>浏览器进入github.com</li><li>登陆github -&gt; “+” -&gt;settings</li><li>后续操作如下图：<br><img src="https://s2.loli.net/2022/03/15/rcsGHuLNnVWSly6.png" alt="888.png"></li><li>再把下面图中的两个设置取消勾选<br><img src="https://s2.loli.net/2022/03/15/5c1SRyixemqB24D.png" alt="999.png"><br><img src="https://s2.loli.net/2022/03/15/1VstJCeSovcOy3a.png" alt="000.png"><br>通过上面的操作，在重新运行下面代码就大功告成了，再刷新页面应该就显示提交的内容了<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># 重新生成提交</span><br>hexo clean <span class="hljs-meta">&amp;&amp; hexo g &amp;&amp; hexo d</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hexo文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>colab</title>
    <link href="/2021/12/06/colab/"/>
    <url>/2021/12/06/colab/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="colab"><a href="#colab" class="headerlink" title="colab"></a>colab</h1><h3 id="1-首先需要一个谷歌账号"><a href="#1-首先需要一个谷歌账号" class="headerlink" title="1.首先需要一个谷歌账号"></a>1.首先需要一个谷歌账号</h3><ul><li>注册的时候可能会遇到号码无法进行验证的情况<br><img src="https://note.youdao.com/yws/api/personal/file/WEBa0668ffc1ca2c15b97f9f9ca83bb29d1?method=download&amp;shareKey=8059a359abd1456eb147a7ce3ca3da7e" alt=""></li><li>因为Google现在不怎么支持中文，所以我们需要把谷歌的英文上移，同时使用英文并且删除中文，只保留英文语言。</li></ul><h3 id="2-查看基本配置"><a href="#2-查看基本配置" class="headerlink" title="2.查看基本配置"></a>2.查看基本配置</h3><ul><li>查看pytorch的版本、cuda是否可用</li><li>查看需要的工具版本<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import torch<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(torch.__version__)</span></span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(torch.cuda.is_available)</span></span><br></code></pre></td></tr></table></figure></li></ul><h3 id="3-挂载"><a href="#3-挂载" class="headerlink" title="3.挂载"></a>3.挂载</h3><h5 id="因为colab只是一个远程的、可以无偿给我们提供GPU支持的主机，而不是本地的存储支持。所以我们需要把我们要运行的代码（谷歌云盘）挂载到远程主机上。"><a href="#因为colab只是一个远程的、可以无偿给我们提供GPU支持的主机，而不是本地的存储支持。所以我们需要把我们要运行的代码（谷歌云盘）挂载到远程主机上。" class="headerlink" title="因为colab只是一个远程的、可以无偿给我们提供GPU支持的主机，而不是本地的存储支持。所以我们需要把我们要运行的代码（谷歌云盘）挂载到远程主机上。"></a>因为colab只是一个远程的、可以无偿给我们提供GPU支持的主机，而不是本地的存储支持。所以我们需要把我们要运行的代码（谷歌云盘）挂载到远程主机上。</h5><ul><li>挂载远程主机<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">from</span> google.colab <span class="hljs-keyword">import</span> drive<br>drive.mount(<span class="hljs-string">&quot;/content/drive)</span><br></code></pre></td></tr></table></figure></li><li>这一步我们需要登录谷歌账号复制链接<br><img src="https://note.youdao.com/yws/api/personal/file/WEB298e801d0a3acba2667fe7ba8c3e6b8c?method=download&amp;shareKey=49b1dbf0ab5675af3b63016127b1f7db" alt=""></li><li>更改运行目录</li><li>因为程序的运行需要在相同的目录下才能相互使用和运行，所以需要把要运行的程序放到同一个目录下。在这一步最好都运行一次，有时候看着是在一个目录下，但事实上在不同的地方。<br><img src="https://note.youdao.com/yws/api/personal/file/WEB4769a1f4d67bdd6fa62e8c71a896ccab?method=download&amp;shareKey=adfef04bbd9d574cc7ac43aadc1674c7" alt=""><h3 id="4-同级文件调用"><a href="#4-同级文件调用" class="headerlink" title="4.同级文件调用"></a>4.同级文件调用</h3><h5 id="当我们在运行一个程序时，有时候需要调用模型模块儿来进行训练，我们只在谷歌云盘上更改后缀，单纯地把-ipynb文件更改成-py文件，从表面上看确实已经成为python文件了。但是事实上colab只能更改-ipynb文件的内容，所以更改后的文件仍然是-ipynb文件。"><a href="#当我们在运行一个程序时，有时候需要调用模型模块儿来进行训练，我们只在谷歌云盘上更改后缀，单纯地把-ipynb文件更改成-py文件，从表面上看确实已经成为python文件了。但是事实上colab只能更改-ipynb文件的内容，所以更改后的文件仍然是-ipynb文件。" class="headerlink" title="当我们在运行一个程序时，有时候需要调用模型模块儿来进行训练，我们只在谷歌云盘上更改后缀，单纯地把.ipynb文件更改成.py文件，从表面上看确实已经成为python文件了。但是事实上colab只能更改.ipynb文件的内容，所以更改后的文件仍然是.ipynb文件。"></a>当我们在运行一个程序时，有时候需要调用模型模块儿来进行训练，我们只在谷歌云盘上更改后缀，单纯地把.ipynb文件更改成.py文件，从表面上看确实已经成为python文件了。但是事实上colab只能更改.ipynb文件的内容，所以更改后的文件仍然是.ipynb文件。</h5><h5 id="要想把-ipynb文件真正变成-py文件，可以先把文件下载到本地，在本地上更改后缀，然后在挂到谷歌云盘当中，这样就可以调用了。"><a href="#要想把-ipynb文件真正变成-py文件，可以先把文件下载到本地，在本地上更改后缀，然后在挂到谷歌云盘当中，这样就可以调用了。" class="headerlink" title="要想把.ipynb文件真正变成.py文件，可以先把文件下载到本地，在本地上更改后缀，然后在挂到谷歌云盘当中，这样就可以调用了。"></a>要想把.ipynb文件真正变成.py文件，可以先把文件下载到本地，在本地上更改后缀，然后在挂到谷歌云盘当中，这样就可以调用了。</h5><h3 id="5-将kaggle的数据集下载到colab上使用"><a href="#5-将kaggle的数据集下载到colab上使用" class="headerlink" title="5.将kaggle的数据集下载到colab上使用"></a>5.将kaggle的数据集下载到colab上使用</h3><h5 id="kaggle上有很多竞赛数据集，但是kaggle的GPU使用时间是有限的，但是colab没有时间限制。如果从本地上传就很慢，所以我们可以把kaggle上的数据集传到（下载）到colab上去使用。"><a href="#kaggle上有很多竞赛数据集，但是kaggle的GPU使用时间是有限的，但是colab没有时间限制。如果从本地上传就很慢，所以我们可以把kaggle上的数据集传到（下载）到colab上去使用。" class="headerlink" title="kaggle上有很多竞赛数据集，但是kaggle的GPU使用时间是有限的，但是colab没有时间限制。如果从本地上传就很慢，所以我们可以把kaggle上的数据集传到（下载）到colab上去使用。"></a>kaggle上有很多竞赛数据集，但是kaggle的GPU使用时间是有限的，但是colab没有时间限制。如果从本地上传就很慢，所以我们可以把kaggle上的数据集传到（下载）到colab上去使用。</h5></li><li>首先需要一个kaggle账号</li><li>下载并更新kaggle <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">!pip <span class="hljs-keyword">install</span> kaggle<br></code></pre></td></tr></table></figure><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">!pip</span> <span class="hljs-comment">install</span> --<span class="hljs-comment">upgrade</span> --<span class="hljs-comment">force</span><span class="hljs-literal">-</span><span class="hljs-comment">reinstall</span> --<span class="hljs-comment">no</span><span class="hljs-literal">-</span><span class="hljs-comment">deps</span> <span class="hljs-comment">kaggle</span><br></code></pre></td></tr></table></figure></li><li>进入kaggle，进入你的账号信息</li><li>往下拖，在API的位置有个Create New API Token，点击后会自动下载一个json文件，打开会出现username和key信息。<br><img src="https://img-blog.csdnimg.cn/20200419131732836.png" alt=""><br><img src="https://note.youdao.com/yws/api/personal/file/WEBfb25bde78e6f9c3aef09e8e2a7d0fc9c?method=download&amp;shareKey=e9d444d9a3d9d5829e7aa62b41b2a767" alt=""></li><li>输入以下代码,把对应的username和key填入即可<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">import</span> json<br>token = &#123;<span class="hljs-string">&quot;username&quot;</span>:<span class="hljs-string">&quot;xxxxx&quot;</span>,<span class="hljs-string">&quot;key&quot;</span>:<span class="hljs-string">&quot;xxxxx&quot;</span>&#125;<br>with open(<span class="hljs-string">&#x27;/content/kaggle.json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) as <span class="hljs-keyword">file</span>:<br>  json.<span class="hljs-keyword">dump</span>(token, <span class="hljs-keyword">file</span>)<br></code></pre></td></tr></table></figure>*然后再依次输入一下代码<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">!mkdir -p ~/.kaggle<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">!cp <span class="hljs-regexp">/content/</span>kaggle.json ~<span class="hljs-regexp">/.kaggle/</span><br></code></pre></td></tr></table></figure><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">!chmod <span class="hljs-number">600</span> ~<span class="hljs-regexp">/.kaggle/</span>kaggle.json<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">!kaggle<span class="hljs-built_in"> config </span><span class="hljs-builtin-name">set</span> -n path -v /content<br></code></pre></td></tr></table></figure></li><li>最后从kaggle上找出自己的数据集,点击Copy API command后进入colab下载即可。<br><img src="https://note.youdao.com/yws/api/personal/file/WEBf34a4d51c6fa1e40b34b6ae821752509?method=download&amp;shareKey=8100dc1c387dc1500f436a85f7c9a479" alt=""></li><li>我这里找了个比较小的数据集，下载速度还可以。我还测试过一个大的数据集，下载速度差不多可以达到90MB/s<br><img src="https://note.youdao.com/yws/api/personal/file/WEBb6313496d36d2da249e897fc00588881?method=download&amp;shareKey=7c07a70f4b8cb8d1c6a30bee58324f97" alt=""><h3 id="6-模型测试【resnet101】-【CIFAR10】"><a href="#6-模型测试【resnet101】-【CIFAR10】" class="headerlink" title="6.模型测试【resnet101】+【CIFAR10】"></a>6.模型测试【resnet101】+【CIFAR10】</h3></li><li>使用GPU<br><img src="https://note.youdao.com/yws/api/personal/file/WEB513ff4229077d747bf3e605c1fdd00b4?method=download&amp;shareKey=41de0a54704bde7e2a37a9000ce1a3ea" alt=""><br><img src="https://note.youdao.com/yws/api/personal/file/WEBec1bab9cceb85c16ce76ae81931b2465?method=download&amp;shareKey=6eec973d892c8cece45aab04a4f77fe7" alt=""><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">import</span> <span class="hljs-built_in">os</span><br><span class="hljs-built_in">os</span>.environ[<span class="hljs-string">&#x27;CUDA_VISIBLE_DEVICES&#x27;</span>] = <span class="hljs-string">&#x27;0&#x27;</span><br></code></pre></td></tr></table></figure></li><li>模型测试<br><img src="https://note.youdao.com/yws/api/personal/file/WEB60e4930efc965989d27d6dfa8ff18e67?method=download&amp;shareKey=445ee61c848f3768e95af7744229c230" alt=""><br><img src="https://note.youdao.com/yws/api/personal/file/WEBbb8925e46e1f00dd8a38c4c164545f29?method=download&amp;shareKey=519bf7b1faef901fde7ba2d78ab7d4a1" alt=""><br><img src="https://note.youdao.com/yws/api/personal/file/WEB2403f1cc4b962d761189f3f225a6686c?method=download&amp;shareKey=0d6aa4fd22927bd36b165f086d3af7f5" alt=""><br><img src="https://note.youdao.com/yws/api/personal/file/WEB1c5a74ca03d7eb939a18719674aa31e3?method=download&amp;shareKey=c779c67e4ef52a1e9eae10065bcd1cc1" alt=""></li></ul>]]></content>
    
    
    <categories>
      
      <category>colab学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>colab的配置与使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gitlab的使用</title>
    <link href="/2021/12/06/gitlab%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/12/06/gitlab%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="gitlab的基本应用"><a href="#gitlab的基本应用" class="headerlink" title="gitlab的基本应用"></a>gitlab的基本应用</h1><h3 id="1-创建gitlab账号，并设置自己的SSH"><a href="#1-创建gitlab账号，并设置自己的SSH" class="headerlink" title="1.创建gitlab账号，并设置自己的SSH"></a>1.创建gitlab账号，并设置自己的SSH</h3><ul><li><em><a href="https://www.cnblogs.com/qianqiu-1026/p/8543588.html">gitlab注册</a></em></li><li>SSH的生成及使用上面链接中内含教程链接，此处不多说</li></ul><h3 id="2-创建仓库"><a href="#2-创建仓库" class="headerlink" title="2.创建仓库"></a>2.创建仓库</h3><ul><li>在自己的项目组里面创建自己的仓库（new project）<br><img src="https://s2.loli.net/2022/04/04/gAfHaJSn4KqbDdL.png" alt="K_K4_8IP41SEII_RLMZ4@BG.png"></li><li>此处举例创建名为demo（只有一个readme文件）</li><li>打开git bash命令窗口进行如下操作：<br>(1) 从gitlab仓库中克隆到本地（此处克隆到桌面）<br><img src="https://s2.loli.net/2022/04/04/uXyC7mwYAczNnei.png" alt="JBNTJKP2_B_RG62J23372WR.png"><br><img src="https://s2.loli.net/2022/04/04/AxO2YV9XyhvSqcp.png" alt="W7SF_L`2VJ6232_1SKVXG09.png"><br>注：此处的地址就是clone的HTTPS<br>(2) clone后会在桌面上显示你的远程仓库文件<br>(3) 把你的项目文件放到桌面的demo文件中<br>(4) 可以通过以下命令看一下demo文件的状态<figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima">cd <span class="hljs-built_in">demo</span><br>git <span class="hljs-built_in">status</span><br></code></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/04/04/5Kupj1nxhgG23Ok.png" alt="@O1CXNN__VU1~_HFMY_2L_R.png"><br>注：此时项目文件中的README.md文件替换了demo中的README.md文件，此时已经在本地的暂存区了<br>而下面的一些文件在demo文件中没有，只是存在于本地目录下<br>(5) 把在本地目录下新加的文件add到暂存区<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-builtin-name">add</span> .<br>注：.代表全部文件<br></code></pre></td></tr></table></figure>(6) 把暂存区的文件commit到仓库中<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git <span class="hljs-keyword">commit</span> -m &quot;第一次提交微信小程序代码&quot;<br>注： &quot;&quot;里面的东西一定要写清楚，这代表着你这次干的什么事，可以看<span class="hljs-keyword">commit</span>记录<br></code></pre></td></tr></table></figure>(7) 最后push到gitlab远程仓库<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git push origin <span class="hljs-keyword">master</span><br><span class="hljs-title">注：origin</span>代表远程，<span class="hljs-literal">master</span>代表push的仓库名<br></code></pre></td></tr></table></figure>(8) 最后你就可以在gitlab界面中刷新看到你的项目文件了，如下图所示：<br><img src="https://s2.loli.net/2022/04/04/Glkja8VysJARFiP.png" alt="W18QH__7_15L@B092OWYK~O.png"></li></ul><h3 id="3-创建分支"><a href="#3-创建分支" class="headerlink" title="3.创建分支"></a>3.创建分支</h3><ul><li>因为一个项目工程不是一个人完成的，需要一个团队进行不同的工作，所以团队成员需要创建一个自己的分支来更新自己的项目进度<br>创建方法如下：<br>(1) 打开你的gitbash命令窗口（在主仓库文件下）<br>(2) 创建分支（名字自定义）<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git branch chen</span><br></code></pre></td></tr></table></figure>(3) 转换到分支下<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git checkout chen</span><br></code></pre></td></tr></table></figure>(4)最后push到你的gitlab远程仓库中即可<br>注：在本地通过命令行创建分支后会同步到远程仓库中<br>可以创建合并请求，如下图所示：<br><img src="https://s2.loli.net/2022/04/04/i1ICVk6wtAsSNzQ.png" alt="G_5NG1FCSKXSULB_RK_K6`F.png"></li></ul>]]></content>
    
    
    <categories>
      
      <category>gitlab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gitlab</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>标题</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
  </entry>
  
  
  
</search>
